trigger:
  batch: true
  branches:
    include:
      - master

pr:
  branches:
    include:
      - master

jobs:
  - job: Windows

    pool:
      name: 'Hosted VS2017'

    workspace:
      clean: all

    variables:
      - name: UnoPackageOutputPath
        value: $(Build.ArtifactStagingDirectory)

    strategy:
      maxParallel: 3
      matrix:
        Release_UWP:
          BuildPlatform: UWP
        Release_Android:
          BuildPlatform: Android
        Release_Wasm:
          BuildPlatform: Wasm

    steps:

    - task: gittools.gitversion.gitversion-task.GitVersion@4

    - task: NuGetToolInstaller@0
      inputs:
        versionSpec: 4.9.1

    - task: NuGetCommand@2
      inputs:
        command: restore
        restoreSolution: src/Uno.AzureDevOps.sln
        feedsToUse: select

    - task: MSBuild@1
      inputs:
        solution: src/Uno.AzureDevOps.sln
        configuration: Release
        platform: $(BuildPlatform)
        restoreNugetPackages: false

    - task: PublishBuildArtifacts@1
      inputs:
        ArtifactName: $(BuildPlatform)
        PathtoPublish: $(UnoPackageOutputPath)
        publishLocation: Container

   # - job: macOS

  #   pool:
  #     name: 'Hosted macOS'

  #   workspace:
  #     clean: all

  #   variables:
  #     - name: UnoPackageOutputPath
  #       value: $(Build.ArtifactStagingDirectory)

  #   strategy:
  #     maxParallel: 1
  #     matrix:
  #       Release_iPhone:
  #         BuildPlatform: iPhone

  #   steps:

  #   #Fixes gitversion task
  #   - bash: |
  #       shopt -s nullglob
  #       function join_by { local IFS="$1"; shift; echo "$*"; }
  #       lib_path=$(join_by ';' $(Agent.WorkFolder)/_tasks/GitVersion*/4.0.*/lib/osx)
  #       echo LD_LIBRARY_PATH: $lib_path
  #       echo "##vso[task.setvariable variable=LD_LIBRARY_PATH]$lib_path"

  #   - task: gittools.gitversion.gitversion-task.GitVersion@4

  #   - task: NuGetToolInstaller@0
  #     inputs:
  #       versionSpec: 4.9.1

  #   - task: NuGetCommand@2
  #     inputs:
  #       command: restore
  #       restoreSolution: src/Uno.AzureDevOps.sln
  #       feedsToUse: select

  #   - task: MSBuild@1
  #     inputs:
  #       solution: src/Uno.AzureDevOps.sln
  #       configuration: Release
  #       platform: $(BuildPlatform)
  #       restoreNugetPackages: false

  #   - task: PublishBuildArtifacts@1
  #     inputs:
  #       ArtifactName: $(BuildPlatform)
  #       PathtoPublish: $(UnoPackageOutputPath)
  #       publishLocation: Container
